import ApexModel from './ApexModel';
import MethodModel from './MethodModel';
import PropertyModel from './PropertyModel';
import EnumModel from './EnumModel';
export default class ClassModel extends ApexModel {
    methods: MethodModel[];
    properties: PropertyModel[];
    cmodelParent?: ClassModel;
    childClasses: ClassModel[];
    childEnums: EnumModel[];
    strClassGroup: string;
    strClassGroupContent: string;
    isInterface: boolean;
    isEnum: boolean;
    seeList: string[];
    className: string;
    constructor(parent?: any);
    getProperties(): PropertyModel[];
    setProperties(properties: PropertyModel[]): void;
    getMethods(): MethodModel[];
    setMethods(methods: MethodModel[]): void;
    getChildClasses(): ClassModel[];
    addChildClass(child: ClassModel): void;
    addChildEnum(childEnum: EnumModel): void;
    getChildEnums(): EnumModel[];
    getClassName(): string;
    setClassName(className: string): void;
    getTopmostClassName(): string;
    getClassGroup(): string;
    setClassGroup(strGroup: string): void;
    getClassGroupContent(): string;
    setClassGroupContent(strGroupContent: string): void;
    getIsInterface(): boolean;
    setIsInterface(isInterface: boolean): void;
    getIsEnum(): boolean;
    setIsEnum(isEnum: boolean): void;
    addSee(seeClassName: string): void;
    getSeeList(): string[];
}
